package com.ZumbaProStudio.controller;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.sql.CallableStatement;
import java.sql.Statement;
import java.text.SimpleDateFormat;

import java.util.Date;

import jakarta.servlet.ServletContext;

public class DB {
	
	Connection connection;
	PreparedStatement preparedStatement;
	
	public DB() {
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			System.out.println("[DB] Driver Loaded");
			
			connection = DriverManager.getConnection("jdbc:mysql://localhost/zumba","john","passWord#");
			System.out.println("[DB] Connectoin Created");
			
		} catch (Exception e) {
			System.out.println("Could Not Connect to the Database: "+e);
			//Something Went Wrong: java.lang.ClassNotFoundException: com.mysql.cj.jdbc.Driver
		}
	}
	
	public String registerUser(users user) {
		String message = "";
		
		try {
			
			String sql = "SELECT * FROM users WHERE email LIKE '" + user.email + "'";
			preparedStatement = connection.prepareStatement(sql);
			ResultSet set  = preparedStatement.executeQuery(sql);
			
			if (!set.isBeforeFirst() ) {    
			    System.out.println("Email Does Not Exist. Try to INSERT INTO users"); 
				try {
					String sql2 = "INSERT INTO users values(null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
					preparedStatement = connection.prepareStatement(sql2);
					preparedStatement.setString(1, user.fname);
					preparedStatement.setString(2, user.lname);
					preparedStatement.setInt(3, user.age);
					preparedStatement.setString(4, user.gender);
					preparedStatement.setString(5, user.email);
					preparedStatement.setString(6, user.address);
					preparedStatement.setString(7, user.city);
					preparedStatement.setString(8, user.zipcode);
					preparedStatement.setString(9, user.phone);
					preparedStatement.setString(10, user.password);

					int result = preparedStatement.executeUpdate();
					System.out.println("result " + result);
					message = result > 0 ? "You have been added in database successfully, Please Login." : "Something Went Wrong, Please Try Again 1";
					
				} catch (Exception e) {
					System.out.println("System Error: " + e);
					message = "Something Went Wrong, Please Try Again 2";
				}
			} else {
				message = "Email Already Exists";
			}
			
		} catch (Exception e) {
			System.out.println("e: " + e);
			message = "Something Went Wrong, Please Try Again 3";
		}
		
		
		return message;
	}
	
	
	public String LoginUser(users user) {
		String message = "";
		
		try {
			String sql = "SELECT * FROM users WHERE email LIKE '" + user.email + "' AND password LIKE '" + user.password + "'";
			preparedStatement = connection.prepareStatement(sql);
			ResultSet set  = preparedStatement.executeQuery(sql);
			
			if (!set.isBeforeFirst() ) {
					message = "Incorrect email or password. ErrorCode: L01";
					System.out.println(message);
					
			} else {
				set.next();
				String name = set.getString("fname") + " " + set.getString("lname") + "_" + set.getString("cid");
				message = name;
				System.out.println("User Logged In as: "+message); 
			}
			
		} catch (Exception e) {
			System.out.println("e: " + e);
			message = "Something Went Wrong, Please Try Again 3. ErrorCode: L02";
			System.out.println(message);
		}
		
		return message;
	}
	
	public String addBatchToDB(batchInfo batch) {
		String message = "";

		try {
			
			String sql = "SELECT * FROM batches WHERE batch_name LIKE '" + batch.name + "'";
			preparedStatement = connection.prepareStatement(sql);
			ResultSet set  = preparedStatement.executeQuery(sql);
			
			if (!set.isBeforeFirst() ) {    
			    System.out.println("Batch Does Not Exist. Try to INSERT INTO batches"); 
				try {
					String sql2 = "INSERT INTO batches values(null, ?, ?, ?, ?, ?, ?)";
					preparedStatement = connection.prepareStatement(sql2);
					preparedStatement.setString(1, batch.name);
					preparedStatement.setString(2, batch.stime);
					preparedStatement.setString(3, batch.etime);
					preparedStatement.setString(4, batch.days);
					preparedStatement.setInt(5, batch.capacity);
					preparedStatement.setString(6, batch.description);

					int result = preparedStatement.executeUpdate();
					System.out.println("result " + result);
					message = result > 0 ? "Batch Added!" : "Something Went Wrong, Please Try Again ErrorCode:1";
					
				} catch (Exception e) {
					System.out.println("System Error: " + e);
					message = "Something Went Wrong, Please Try Again ErrorCode:2";
				}
			} else {
				message = "Batch Already Exists";
			}
			
		} catch (Exception e) {
			System.out.println("e: " + e);
			message = "Something Went Wrong, Please Try Again ErrorCode:3";
		}
		
		
		return message;
	}
	
	
	public String viewBatchFromDB() {
		
		String TableData = "";
		try {
			String sql = "SELECT b.*, IFNULL(bs.signups, 0) AS signups FROM batches b "
					+ "LEFT JOIN (SELECT bid, COUNT(cid) AS signups "
					+ "FROM batchsignups GROUP BY bid) bs ON b.bid = bs.bid;";
			preparedStatement = connection.prepareStatement(sql);
			ResultSet set  = preparedStatement.executeQuery();

			while(set.next()) {
				TableData += "<tr>";
				TableData += "<td>" + set.getInt(1) + "</td>";
				TableData += "<td>" + set.getString(2) + "</td>";
				TableData += "<td>" + set.getString(3) + "</td>";
				TableData += "<td>" + set.getString(4) + "</td>";
				TableData += "<td>" + set.getString(5) + "</td>";
				TableData += "<td>" + set.getInt(6) + "</td>";
				TableData += "<td>" + set.getString(7) + "</td>";
				TableData += "<td>" + "</td>";
				TableData += "<td><form style=\"width: 100%;\" action=\"Admin\" method = \"POST\">";
				TableData += "<input type=\"hidden\" name=\"htmlFormName\" value=\"DeleteBatch_" + set.getInt(1) + "\" />";
				TableData += "<button data-bid=\"" + set.getInt(1) + "\" type=\"submit\" value=\"Submit\">Delete</button>";
				TableData += "</form></td>";
				
				TableData += "</tr>";
			}
			
		} catch (Exception e) {
			System.out.println("Exception Occured: " + e);
		}
		
		return TableData;
	}
	
//	public ArrayList<batchInfo> viewBatchFromDB() {
//		ArrayList<batchInfo> batches = new ArrayList<batchInfo>();
//		String TableData = "";
//		try {
//			String sql = "SELECT * FROM batches ORDER by bid";
//			preparedStatement = connection.prepareStatement(sql);
//			ResultSet set  = preparedStatement.executeQuery();
//			//ResultSet set = statement.executeQuery(sql);
//			while(set.next()) {
//				batchInfo batch = new batchInfo();
//				batch.setBid(set.getInt(1));
//				batch.setBatchName(set.getString(2));
//				batch.setStart(set.getString(3));
//				batch.setEnd(set.getString(4));
//				batch.setDays(set.getString(5));
//				batch.setCapacity(set.getInt(6));
//				batch.setDetails(set.getString(7));
//				batches.add(batch);						
//				
//			}
//			
//			
//		} catch (Exception e) {
//			System.out.println("Exception Occured: " + e);
//		}
//		
//		return batches;
//	}
	
	public String deleteBatchFromDB(int bid) {
		String message = "";
	
		try {
			String sql = "DELETE FROM batches WHERE bid = " + bid;
			preparedStatement = connection.prepareStatement(sql);
			int result = preparedStatement.executeUpdate();
			
			message = result > 0 ? "Batch "+ bid + " Deleted Successfully" : "Something Went Wrong! ErrorCode:B01";
			
		} catch (Exception e) {
			System.out.println("Exception Occured: " + e);
			message = "Something Went Wrong! ErrorCode:B02";
		}
		
		return message;
	}
	
public String viewUserBatchFromDB(String cid) {
		
		String TableData = "";
		try {
			String sql = "SELECT b.*, IFNULL(bs.signups, 0) AS signups, CASE WHEN bs2.cid IS NOT NULL THEN 1 ELSE 0 END AS cid_equals_2 FROM batches b"
					+ "LEFT JOIN ( SELECT bid, COUNT(cid) AS signups FROM batchsignups GROUP BY bid) bs ON b.bid = bs.bid "
					+ "LEFT JOIN batchsignups bs2 ON b.bid = bs2.bid AND bs2.cid = "+cid+";";
			preparedStatement = connection.prepareStatement(sql);
			ResultSet set  = preparedStatement.executeQuery();

			while(set.next()) {
				TableData += "<tr>";
				TableData += "<td>" + set.getInt(1) + "</td>";
				TableData += "<td>" + set.getString(2) + "</td>";
				TableData += "<td>" + set.getString(3) + "</td>";
				TableData += "<td>" + set.getString(4) + "</td>";
				TableData += "<td>" + set.getString(5) + "</td>";
				TableData += "<td>" + set.getInt(6) + "</td>";
				TableData += "<td>" + set.getString(7) + "</td>";
				TableData += "<td>" + set.getString(8) + "</td>";
				if (set.getInt(9) == 0) {
					TableData += "<td><form style=\"width: 100%;\" action=\"dashboard\" method = \"POST\">";
					TableData += "<input type=\"hidden\" name=\"htmlFormName\" value=\"SignUpBatch_" + set.getInt(1) + "\" />";
					TableData += "<button data-bid=\"" + set.getInt(1) + "\" type=\"submit\" value=\"Submit\">SignUp</button>";
					TableData += "</form></td>";					
				} else {
					TableData += "<td><form style=\"width: 100%;\" action=\"dashboard\" method = \"POST\">";
					TableData += "<input type=\"hidden\" name=\"htmlFormName\" value=\"RemoveFromBatch_" + set.getInt(1) + "\" />";
					TableData += "<button data-bid=\"" + set.getInt(1) + "\" type=\"submit\" value=\"Submit\">Delete</button>";
					TableData += "</form></td>";
				}
				
				TableData += "</tr>";
			}
			
		} catch (Exception e) {
			System.out.println("Exception Occured: " + e);
		}
		
		return TableData;
	}

public String addbatchSignup(int bid, String cid) {
	String message = "";
	
	try {
				String sql2 = "INSERT INTO batchsignups values(null, ?, ?)";
				preparedStatement = connection.prepareStatement(sql2);
				preparedStatement.setInt(1, bid);
				preparedStatement.setString(2, cid);

				int result = preparedStatement.executeUpdate();
				System.out.println("result " + result);
				message = result > 0 ? "You have been added to the Class" : "Something Went Wrong, Please Try Again. ErrorCode:A01";
		
	} catch (Exception e) {
		System.out.println("e: " + e);
		message = "Something Went Wrong, Please Try Again. ErrorCode:A02";
	}
	
	
	return message;
}

public String removeBatchSignup(int bid, int cid) {
	String message = "";
	
	try {
				String sql = "DELETE from batchsignups WHERE bid=" + bid + " AND cid="+ cid ;
				preparedStatement = connection.prepareStatement(sql);

				int result = preparedStatement.executeUpdate();
				
				message = result > 0 ? "Batch "+ bid + " You Have Been Removed From The Class Successfully" : "Something Went Wrong, Please Try Again. ErrorCode:C01";
		
	} catch (Exception e) {
		System.out.println("e: " + e);
		message = "Something Went Wrong, Please Try Again. ErrorCode:C01\"";
	}
	
	
	return message;
}

	
	public void closeConnection() {
		try {
			connection.close();
			System.out.println("[DB] Connection to DB Closed");
		} catch (Exception e) {
			// TODO: handle exception
		}
	}

}